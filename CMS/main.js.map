{"version":3,"sources":["./$_lazy_route_resources|lazy|groupOptions: {}|namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/componenets/body/body.component.html","./src/app/componenets/body/body.component.ts","./src/app/componenets/card/card.component.ts","./src/app/componenets/card/card.component.html","./src/app/componenets/header/header.component.ts","./src/app/componenets/header/header.component.html","./src/app/componenets/modalform/modalform.component.html","./src/app/componenets/modalform/modalform.component.ts","./src/app/users.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(() => {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = () => ([]);\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 8255;\nmodule.exports = webpackEmptyAsyncContext;","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { BodyComponent } from './componenets/body/body.component';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'CMS';\n}\n","<!-- <app-prueba></app-prueba> -->\n\n<app-header>\n</app-header>\n<app-body>\n</app-body>","import { HttpClient, HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { UsersService } from './users.service';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BodyComponent } from './componenets/body/body.component';\nimport { HeaderComponent } from './componenets/header/header.component';\nimport { CardComponent } from './componenets/card/card.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatButtonModule } from '@angular/material/button';\nimport { ModalformComponent } from './componenets/modalform/modalform.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    BodyComponent,\n    HeaderComponent,\n    CardComponent,\n    ModalformComponent,\n    \n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    MatButtonModule, MatDialogModule,\n    AppRoutingModule, FormsModule, HttpClientModule, BrowserAnimationsModule\n  ],\n  providers: [HttpClient],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","<main>\r\n    <nav id=\"second-nav\">\r\n        <div class=\"section-name\">\r\n            <img class=\"usr-img\" src=\"../../../assets/PNG/icono_usuarios.png\" alt=\"\">\r\n            <h2>Usuarios</h2>\r\n        </div>\r\n        <div class=\"search-content\">\r\n            <input id=\"search-bar\" type=\"text\" placeholder=\"Buscador\" type=\"text\" [(ngModel)]=\"inputext\" />\r\n            <label for=\"search-bar\" id=\"search-btn\">\r\n                <img class=\"search-icon\" src=\"../../../assets/PNG/icono_buscar.png\" alt=\"search-icon\">\r\n            </label>\r\n        </div>\r\n    </nav>\r\n\r\n    <section class=\"users-content\">\r\n        <app-card class=\"user-card\" *ngFor=\"let user of users;\" [hidden]=\"!user.firstName.includes(inputext)\" [User]=\"user\"></app-card>\r\n\r\n    </section>\r\n</main>","import { Component, OnInit } from '@angular/core';\nimport { UsersService } from '../../users.service';\nimport { UserI } from 'src/app/models/user.interface';\n\n@Component({\n  selector: 'app-body',\n  templateUrl: './body.component.html',\n  styleUrls: ['./body.component.scss']\n})\nexport class BodyComponent implements OnInit {\n  usersList: any;\n  buscar: any;\n  inputext: string = \"\";\n  users: UserI[];\n\n  constructor(private servicio: UsersService) {\n    this.users = [];\n   }\n\n  ngOnInit(): void {\n    this.servicio.getUsers().subscribe(data => (this.users = data));\n  }\n\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\nimport { ModalformComponent } from '../modalform/modalform.component';\n\n\n\n@Component({\n  selector: 'app-card',\n  templateUrl: './card.component.html',\n  styleUrls: ['./card.component.scss']\n})\nexport class CardComponent implements OnInit {\n  @Input() User: any;\n  \n  constructor(public dialog: MatDialog) { }\n\n  ngOnInit(): void {\n    \n  }\n  openDialog(bandera: String): void {\n    \n    const dialogRef = this.dialog.open(ModalformComponent, {\n      width: '250px',\n      data: {}\n      \n    });\n    dialogRef.componentInstance.title = 'Editar Usuario';\n    dialogRef.componentInstance.User2Edit = this.User;  \n    dialogRef.componentInstance.botton = 'Guardar Usuario';\n  }\n\n}\n\n\n","<div>\n    <div class=\"user-header\">\n        <span class=\"user-text\">{{ User.firstName }} {{ User.lastName }}</span>\n        <button class=\"edit-btn\" (click)=\"openDialog('')\">\n                <img class=\"edit-icon \" src=\"../../../assets/PNG/icono_editar.png \" alt=\" \">\n            </button>\n    </div>\n    <div class=\"info-content \">\n        <img *ngIf=\"User.gender=='f' \" class=\"user-photo women \" src=\"../../../assets/PNG/icono_mujer.png \" alt=\" \">\n        <img *ngIf=\"User.gender=='m' \" class=\"user-photo men \" src=\"../../../assets/PNG/icono_hombre.png \" alt=\" \">\n        <p class=\"user-info \">\n            <span class=\"city \">{{User.location}}</span>\n            <span class=\"phone-number \"> {{User.phone}} </span>\n        </p>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ModalformComponent } from '../modalform/modalform.component';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor(public dialog: MatDialog) { }\n\n  ngOnInit(): void {\n  }\n\n  openDialog(bandera: String): void {\n\n    const dialogRef = this.dialog.open(ModalformComponent, {\n      width: '250px',\n      data: {}\n    });\n\n    dialogRef.componentInstance.title = 'Agregar Usuario';\n    dialogRef.componentInstance.botton = 'Agregar Usuario';\n\n  }\n\n}\n","<nav id=\"main-nav\">\r\n    <div>\r\n        <h1>Ejercicio CMS</h1>\r\n        <button class=\"new-user\" (click)=\"openDialog('agregar')\">Agregar usuario\r\n                <img class=\"icon-btn\" src=\"../../../assets/PNG/icono_agregar.png\" alt=\"plus-icon\">\r\n            </button>\r\n    </div>\r\n</nav>","<div id=\"hide-div\">\n    <div class=\"card-info\">\n        <div class=\"action-header\">\n            <p class=\"action-title\">{{title}}</p>\n            <button class=\"close-btn\" (click)=\"cerrar()\"><img src=\"../../../assets/PNG/icono_cerrar.png\" class=\"close-img\"\n                    alt=\"close\"\n                    ></button>\n        </div>\n        <div id=\"fr-new-user\" class=\"input-form\">\n            <div class=\"input-content\">\n                <div>\n                    <label for=\"user-name\" class=\"labels\">Nombre</label>\n                    <input type=\"text\" id=\"user-name\" class=\"user-field\" value={{User2Edit.firstName}} [(ngModel)]=Nombre maxlength=\"45\">\n                </div>\n                <div>\n                    <label for=\"user-lastname\" class=\"labels\">Apellido</label>\n                    <input type=\"text\" id=\"user-lastname\" class=\"user-field\" value={{User2Edit.lastName}} [(ngModel)]=Apellido maxlength=\"45\">\n                </div>\n                <div>\n                    <label for=\"user-location\" class=\"labels\">Ubicacion</label>\n                    <input type=\"text\" id=\"user-location\" class=\"user-field\" value={{User2Edit.location}} [(ngModel)]=Ubicacion maxlength=\"90\">\n                </div>\n                <div>\n                    <label for=\"user-phone\" class=\"labels\">Celular</label>\n                    <input type=\"text\" id=\"user-phone\" class=\"user-field\" value={{User2Edit.phone}} [(ngModel)]=Telefono maxlength=\"10\">\n                </div>\n            </div>\n            <div class=\"gender-content\">\n                <div>\n                    <input *ngIf=\"User2Edit.gender=='f'\" type=\"radio\" name=\"gender\" [(ngModel)]=sex id=\"male\" class=\"radio-style\" value=\"m\">\n                    <input *ngIf=\"User2Edit.gender=='m'\" type=\"radio\" name=\"gender\" [(ngModel)]=sex id=\"male\" class=\"radio-style\" value=\"m\" checked>\n                    <input *ngIf=\"User2Edit.gender==undefined\" type=\"radio\" name=\"gender\" [(ngModel)]=sex id=\"male\" class=\"radio-style\" value=\"m\">\n                    <label for=\"male\" class=\"labels gender-label\">Hombre</label>\n                </div>\n                <div>\n                    <input *ngIf=\"User2Edit.gender=='f'\" type=\"radio\" name=\"gender\" [(ngModel)]=sex id=\"female\" class=\"radio-style\" value=\"f\" checked>\n                    <input *ngIf=\"User2Edit.gender=='m'\" type=\"radio\" name=\"gender\" [(ngModel)]=sex id=\"female\" class=\"radio-style\" value=\"f\">\n                    <input *ngIf=\"User2Edit.gender==undefined\" type=\"radio\" name=\"gender\" [(ngModel)]=sex id=\"female\" class=\"radio-style\" value=\"f\">\n                    <label for=\"female\" class=\"labels gender-label\">Mujer</label>\n                </div>\n\n            </div>\n            <div class=\"form-actions\">\n                <button type=\"submit\" class=\"form-btn accept-btn\" (click)=\"save()\" [disabled]=\"habiliatarBoton()\">{{botton}}</button>\n                <button class=\"form-btn cancel-btn\" (click)=\"cerrar()\">Cancelar</button>\n            </div>\n        </div>\n    </div>\n</div>","import { Component, OnInit, Input } from '@angular/core';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { UsersService } from '../../users.service';\nimport { UserI } from 'src/app/models/user.interface';\n\n@Component({\n  selector: 'app-modalform',\n  templateUrl: './modalform.component.html',\n  styleUrls: ['./modalform.component.scss']\n})\n\n\n\nexport class ModalformComponent implements OnInit {\n  public title: string;\n  public User2Edit: any;\n  public botton: string;\n  sex: boolean;\n  users: UserI[];\n\n\n  @Input()\n  Nombre: string;\n  Apellido: string;\n  Ubicacion: string;\n  Telefono: string;\n\n  constructor(private servicio: UsersService, public dialogRef: MatDialogRef<ModalformComponent>) {\n    this.title = \"\";\n    this.User2Edit = \"\";\n    this.botton = \"\";\n    this.sex = false;\n    this.users = [];\n\n\n    //Usuario\n    this.Nombre = \"\";\n    this.Apellido = \"\";\n    this.Ubicacion = \"\";\n    this.Telefono = \"\"\n\n  }\n\n  // firstName <- nombre, máx 45 caracteres, obligatorio*\n  // lastName <- apellido, máx 45 caracteres, obligatorio*\n  // location <- ubicación, máx 90 caracteres\n  // phone <- teléfono, máx 10 caracteres\n  // gender <- género, máx 1 caracter (m = hombre   O   f = mujer), obligatorio*\n\n\n  ngOnInit(): void {\n    console.log(this.User2Edit);\n    this.Nombre = this.User2Edit.firstName;\n    this.Apellido = this.User2Edit.lastName;\n    this.Ubicacion = this.User2Edit.location;\n    this.Telefono = this.User2Edit.phone;\n    this.sex = this.User2Edit.gender;\n  }\n\n\n  cerrar(): void {\n    this.dialogRef.close();\n  }\n\n\n  habiliatarBoton(): boolean {\n    if (this.Nombre && this.Apellido && this.Telefono && this.Ubicacion && this.sex) {\n      return false;\n    } else {\n      return true;\n    }\n\n  }\n\n  save() {\n    if (this.title === \"Editar Usuario\") {\n      console.log(this.User2Edit.id);\n      this.User2Edit.firstName = this.Nombre;\n      this.User2Edit.lastName =this.Apellido;\n      this.User2Edit.location = this.Ubicacion;\n      this.User2Edit.phone = this.Telefono;\n      this.User2Edit.gender = this.sex;\n      this.servicio.putUser(this.User2Edit).subscribe(data => console.log(this.User2Edit));\n    } else {\n      const user = {\n        firstName: this.Nombre,\n        lastName: this.Apellido,\n        location: this.Ubicacion,\n        phone: this.Telefono,\n        gender: this.sex\n      }      \n      this.servicio.postUser(user).subscribe(data => console.log(user));\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { UserI, UserM } from './models/user.interface';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class UsersService {\n  users: any;\n  private api = \"http://iacenter.victortalamantes.com/users\"\n  constructor(private http: HttpClient) {\n    this.users = null;\n  }\n  getUsers(): Observable<UserI[]> {\n    return this.http.get<UserI[]>(this.api);\n  }\n\n  postUser(user: UserM): Observable<UserM> {\n    this.api = \"http://iacenter.victortalamantes.com/user\"\n    return this.http.post<UserM>(this.api, user);\n  }\n\n\n  putUser(user: UserI): Observable<UserI> {\n    this.api = \"http://iacenter.victortalamantes.com/user/\"+user.id;\n    return this.http.put<UserI>(this.api, user);\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}